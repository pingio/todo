<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					>
	
	<!--#region Input-->
	<Style x:Key="Input" TargetType="{x:Type TextBox}"  BasedOn="{StaticResource BaseStyle}">
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="AcceptsReturn" Value="True"/>
		<Setter Property="AcceptsTab" Value="True"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="Background" Value="Transparent"/>
	</Style>
	<!--#endregion-->
	
	<!--#region Header-->
	<Style x:Key="Header" TargetType="{x:Type TextBox}"  BasedOn="{StaticResource BaseStyle}">
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="FontSize" Value="24"/>
		<Setter Property="FontStyle" Value="Normal"/>
		<Setter Property="FontWeight" Value="ExtraLight"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Background" Value="Transparent"/>

		<Style.Triggers>
			<Trigger Property="IsFocused" Value="True">
				<Setter Property="BorderBrush" Value="Transparent"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" Value="Transparent"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<!--#endregion-->

	<!--#region HeaderBlock-->
	<Style x:Key="HeaderBlock" TargetType="{x:Type TextBlock}"  BasedOn="{StaticResource BaseTextBlockStyle}">
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="FontSize" Value="24"/>
		<Setter Property="FontStyle" Value="Normal"/>
		<Setter Property="FontWeight" Value="ExtraLight"/>
		<Setter Property="Background" Value="Transparent"/>
	</Style>
	<!--#endregion-->

	<!--#region BaseButton-->
	<Style x:Key="Button" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
		<Setter Property="MaxHeight" Value="25"/>
		<Setter Property="MinWidth" Value="50"/>
		<Setter Property="Padding" Value="5 2"/>
		<Setter Property="Margin" Value="3 0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Foreground" Value="{StaticResource FontDarkColourBrush}"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}" BorderThickness="1px" BorderBrush="#FF707070">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" MaxHeight="25" Margin="{TemplateBinding Padding}"/>
					</Border>

				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="#FFCBCBCB"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="#FFCBCBCB"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<!--#endregion-->

	<!--#region SaveButton-->
	<Style x:Key="SaveButton" TargetType="{x:Type Button}" BasedOn="{StaticResource Button}">
		<Setter Property="Background" Value="#00a86b"/>
		<Setter Property="Foreground" Value="#fff"/>
		<Setter Property="Padding" Value="5 2"/>


		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}"  BorderThickness="1" BorderBrush="#FF707070">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" MaxHeight="25" Margin="{TemplateBinding Padding}" />
					</Border>

				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="#017f51"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="#039962"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<!--#endregion-->

	<!--#region RadioButton-->
	<Style x:Key="RadioButton" TargetType="{x:Type RadioButton}">
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Margin" Value="0 0 15 0"/>
	</Style>
	<!--#endregion-->

	<!--#region NoteGroupBorder-->
	<Style x:Key="NoteGroupBorder" TargetType="{x:Type Border}">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource BackgroundDarkThemeColourBrush}"/>
		<Setter Property="Width" Value="300"/>
		<Setter Property="MinWidth" Value="300"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="Background" Value="White"/>
		<Setter Property="Margin" Value="0 0 5 0"/>
		<Setter Property="CornerRadius" Value="5"/>
	</Style>
	<!--#endregion-->

	<!--#region Font Awesome Icons-->
	<Style TargetType="{x:Type Button}" x:Key="Icon">
		<Setter Property="Height" Value="25"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Opacity" Value="0.7"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}"  BorderThickness="0" BorderBrush="Transparent">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" MaxHeight="25" Margin="{TemplateBinding Padding}" />
					</Border>

				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Opacity" Value="1"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Opacity" Value="1"/>
			</Trigger>
		</Style.Triggers>
		
	</Style>

	<!--#endregion-->
	
	<!--#region UpdateBorder-->
	<Style TargetType="{x:Type Border}" x:Key="UpdateBorder">
		<Setter  Property="Background" Value="{StaticResource BackgroundLightThemeColourBrush}"/>
		<Setter Property="CornerRadius" Value="30"/>
		<Setter Property="Height" Value="65"/>
		<Setter Property="Width" Value="350"/>

	</Style>

	<!--#region UpdateBorder-->
	<Style TargetType="{x:Type Button}" x:Key="UpdateLink">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Style="{StaticResource UpdateBorder}">
						<ContentPresenter/>
					</Border>

				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>


</ResourceDictionary>